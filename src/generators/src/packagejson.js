const { objToString } = require('../utils')

const optionalPackages = {
  // TO DO: add "Ë†" to the herbs2knex and herbs2rest version when it is released
  mongo: ['"@herbsjs/herbs2mongo": "^3.0.3"', '"mongodb": "^4.8.1"'],
  postgres: ['"@herbsjs/herbs2knex": "2.1.1-beta.3"', '"pg": "^8.7.3"'],
  sqlite: ['"@herbsjs/herbs2knex": "2.1.1-beta.3"', '"sqlite3": "^5.0.11"'],
  sqlserver: ['"@herbsjs/herbs2knex": "2.1.1-beta.3"', '"tedious": "^15.1.0"', '"mssql": "^9.0.1"'],
  mysql: ['"@herbsjs/herbs2knex": "2.1.1-beta.3"', '"mysql2": "^2.3.3"'],
  rest: ['"@herbsjs/herbs2rest": "4.1.0-beta.12"', '"express": "^4.18.1"'],
  graphql: ['"@herbsjs/herbs2gql": "^4.0.0-beta.2"', '"graphql": "^16.5.0"', '"apollo-server": "^3.8.2"','"apollo-server-express": "^3.8.2"', '"graphql-tools": "^8.2.12"', '"graphql-scalars": "^1.17.0"',]
}

const defaultOptions = (options) => {
  return {
    name: options.name ? options.name.replace(/\s/g, '').replace(/[`~!@#$%^&*()|+\=?;:'",.<>\{\}\[\]\\\/]/gi, '') : 'herbs-project',
    description: options.description ? options.description : 'project generated by herbs CLI S2',
    author: options.author ? options.author.replace(/\s/g, '').replace(/[`~!@#$%^&*()|+\=?;:'",.<>\{\}\[\]\\\/]/gi, '') : 'herbs CLI',
    license: options.license ? options.license : 'MIT',
    mongo: options.mongo ? options.mongo : false,
    sqlite: options.sqlite ? options.sqlite : false,
    postgres: options.postgres ? options.postgres : false,
    sqlserver: options.sqlserver ? options.sqlserver : false,
    mysql: options.mysql ? options.mysql : false,
    graphql: options.graphql ? options.graphql : false,
    rest: options.rest ? options.rest : false
  }
}

module.exports =
  async ({
    template: { generate },
    parameters: {
      options
    } }) => async () => {

      process.stdout.write(`Generating package.json and running npm\n`)

      options = defaultOptions(options)
      const migration = (options.postgres || options.sqlserver || options.mysql || options.sqlite)
        ? `,
      "knex:make": "npx knex --knexfile knexFile.js migrate:make",
      "knex:migrate": "npx knex --knexfile knexFile.js migrate:latest",
      "knex:rollback": "npx knex --knexfile knexFile.js migrate:rollback",
      "knex:makeSeeds": "npx knex --knexfile knexFile.js seed:make",
      "knex:runSeeds": "npx knex --knexfile knexFile.js seed:run"`
        : ''

      let packages = [
        '"@herbsjs/herbs": "^2.1.0-beta.6"',
        '"@herbsjs/herbarium": "^1.5.0"',
        '"@herbsjs/herbsshelf": "^5.1.0-beta.6"',
        '"dotenv": "^16.0.1"',
        '"deepmerge": "^4.2.2"',
        '"nodemon": "^2.0.19"',
        '"mocha": "^10.0.0"',
        '"sugar-env": "^1.5.14"',
        '"cors": "^2.8.5"',
        '"helmet": "^7.0.0"',
        '"passport": "^0.6.0"',
        '"passport-jwt": "^4.0.1"',
      ]

      for (const key of Object.keys(options)) {
        if (key && options[key]) {
          packages = packages.concat(optionalPackages[key])
        }
      }
      packages = packages.filter(item => !!item)

      await generate({
        template: 'package.json.ejs',
        target: 'package.json',
        props: {
          ...options,
          migration,
          packages: objToString(packages, { removeQuotes: false, removeBraces: true, extraSpaces: 2 })
        }
      })
    }
